{"version":3,"sources":["SimpleSlider.js","App.js","serviceWorker.js","index.js"],"names":["SimpleSlider","state","value","handleChange","event","_this","setState","props","onChange","classes","this","react_default","a","createElement","className","root","Typography_default","id","name","Slider_default","max","min","step","onDragEnd","container","slider","aria-labelledby","React","Component","withStyles","width","padding","background","margin","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSliderChange","bind","assertThisInitialized","fetcher","handleRef","handleFahrenheit","error","isLoaded","point","ref","ambientTemp","current","seer","year","tonnage","stateDuration","fahrenheit","data","lp","x","y","vp","lt","vt","sh","sc","plotFeatures","title","handle","_this2","assign","defineProperty","_this3","fetch","concat","then","res","json","result","console","log","_this4","datum","newref","newF","_this5","_this$state","message","src_SimpleSlider","Switch_default","checked","color","map","element","es","height","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAkBMA,6MACJC,MAAQ,CACNC,MAAO,QAGTC,aAAe,SAACC,EAAOF,GACrBG,EAAKC,SAAS,CAAEJ,UAChBG,EAAKE,MAAMC,SAASJ,EAAOF,4EAGpB,IACCO,EAAYC,KAAKH,MAAjBE,QACCP,EAAUQ,KAAKT,MAAfC,MAET,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQM,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,GAAG,SAASP,KAAKH,MAAMW,KAAMhB,GACzCS,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CACEQ,IAAKV,KAAKH,MAAMa,IAChBC,IAAKX,KAAKH,MAAMc,IAChBC,KAAMZ,KAAKH,MAAMe,KACjBC,UAAWb,KAAKH,MAAMgB,UACtBd,QAAS,CAAEe,UAAWf,EAAQgB,QAC9BvB,MAAOA,EACPwB,kBAAgB,QAChBlB,SAAUE,KAAKP,uBAzBEwB,IAAMC,WAoClBC,uBAhDA,CACbd,KAAM,CACJe,MAAO,IACPC,QAAQ,OACRC,WAAW,wBACXC,OAAO,OAETR,OAAQ,CACNM,QAAS,aAwCEF,CAAmB7B,qCCyJnBkC,cArMb,SAAAA,EAAY3B,GAAO,IAAAF,EAAA,OAAA8B,OAAAC,EAAA,EAAAD,CAAAzB,KAAAwB,IACjB7B,EAAA8B,OAAAE,EAAA,EAAAF,CAAAzB,KAAAyB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7B,KAAMH,KACDiC,mBAAqBnC,EAAKmC,mBAAmBC,KAAxBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA9B,KAC1BA,EAAKsC,QAAUtC,EAAKsC,QAAQF,KAAbN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA9B,KACfA,EAAKuC,UAAYvC,EAAKuC,UAAUH,KAAfN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA9B,KACjBA,EAAKwC,iBAAmBxC,EAAKwC,iBAAiBJ,KAAtBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAA9B,KACxBA,EAAKJ,MAAQ,CACX6C,MAAO,KACPC,UAAU,EACVC,MAAM,CAACC,IAAI,OACLC,YAAa,GACbC,QAAS,EACTC,KAAM,GACNC,KAAM,KACNC,QAAS,EACTC,cAAe,IACfC,WAAY,QAClBtD,MAAO,GACPuD,KAAM,CAACC,GAAK,CAAC,CAACC,EAAE,IAAIC,EAAE,GAAG,CAACD,EAAE,IAAIC,EAAE,GAAG,CAACD,EAAE,IAAIC,EAAE,IACxCC,GAAK,CAAC,CAACF,EAAE,EAAEC,EAAE,GAAG,CAACD,EAAE,IAAIC,EAAE,GAAG,CAACD,EAAE,IAAIC,EAAE,IACrCE,GAAK,CAAC,CAACH,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,IACpCG,GAAK,CAAC,CAACJ,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,IACpCI,GAAK,CAAC,CAACL,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,IACpCK,GAAK,CAAC,CAACN,EAAE,EAAEC,EAAE,GAAG,CAACD,EAAE,EAAEC,EAAE,GAAG,CAACD,EAAE,GAAGC,EAAE,MAE1CvD,EAAK6D,aAAe,CAAC,CAACC,MAAM,uBAAwBlD,GAAG,SAAUmD,OAAO,MACpD,CAACD,MAAO,sBAAuBlD,GAAG,SAAUmD,OAAO,MACnD,CAACD,MAAO,mBAAoBlD,GAAG,SAAUmD,OAAO,MAChD,CAACD,MAAO,kBAAmBlD,GAAG,SAAUmD,OAAO,MAC/C,CAACD,MAAO,YAAalD,GAAI,SAAUmD,OAAO,MAC1C,CAACD,MAAO,UAAWlD,GAAG,SAAUmD,OAAO,OA9B1C/D,kFAiCAa,GAAM,IAAAmD,EAAA3D,KACvB,OAAO,SAACN,EAAOF,GACbmE,EAAK/D,SAAS,CAAC0C,MAAMb,OAAOmC,OAAOD,EAAKpE,MAAM+C,MAAzBb,OAAAoC,EAAA,EAAApC,CAAA,GAAkCjB,EAAOhB,mDAI9C,IAAAsE,EAAA9D,KACdsC,EAAQtC,KAAKT,MAAM+C,MACvByB,MAAK,4BAAAC,OACS1B,EAAMC,IADf,uBAAAyB,OAEU1B,EAAME,YAFhB,mBAAAwB,OAGM1B,EAAMG,QAHZ,gBAAAuB,OAIG1B,EAAMI,KAJT,gBAAAsB,OAKG1B,EAAMK,KALT,mBAAAqB,OAMM1B,EAAMM,QANZ,yBAAAoB,OAOY1B,EAAMO,cAPlB,sBAAAmB,OAQS1B,EAAMQ,aACjBmB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACG,GACCC,QAAQC,IAAI,uBACZR,EAAKlE,SAAS,CACZyC,UAAU,EACVE,IAAK6B,EAAO7B,OAMhB,SAACH,GACC0B,EAAKlE,SAAS,CACZyC,UAAU,EACVD,8CAKD,IAAAmC,EAAAvE,KACDsC,EAAQtC,KAAKT,MAAM+C,MACzB+B,QAAQC,IAAI,kBACZD,QAAQC,IAAIhC,GACZyB,MAAK,sBAAAC,OAAuB1B,EAAMC,IAA7B,iBAAAyB,OAAgD1B,EAAME,YAAtD,aAAAwB,OAA6E1B,EAAMG,QAAnF,UAAAuB,OAAmG1B,EAAMI,KAAzG,UAAAsB,OAAsH1B,EAAMK,KAA5H,aAAAqB,OAA4I1B,EAAMM,QAAlJ,mBAAAoB,OAA2K1B,EAAMO,cAAjL,gBAAAmB,OAA6M1B,EAAMQ,aACvNmB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAACO,GACDH,QAAQC,IAAIE,GACZD,EAAK3E,SAAS,CAACmD,KAAKyB,0CAMtB,GAAe,QADFxE,KAAKT,MAAM+C,MAAMC,IACP,IAAIkC,EAAO,WAAYA,EAAO,QACrDzE,KAAKJ,SAAS,CAAC0C,MAAMb,OAAOmC,OAAO5D,KAAKT,MAAM+C,MAAO,CAACC,IAAKkC,MAC3DzE,KAAKiC,qDAIL,GAAa,SADFjC,KAAKT,MAAM+C,MAAMQ,WACN,IAAI4B,EAAK,YAAaA,EAAK,QACjD1E,KAAKJ,SAAS,CAAC0C,MAAMb,OAAOmC,OAAO5D,KAAKT,MAAM+C,MAAO,CAACQ,WAAY4B,MAChC,SAA9B1E,KAAKT,MAAM+C,MAAMQ,WAAqB9C,KAAKJ,SAAS,CAAC0C,MAAMb,OAAOmC,OAAO5D,KAAKT,MAAM+C,MAAO,CAACE,YAA+C,GAAjCxC,KAAKT,MAAM+C,MAAME,YAAY,IAAM,MACvIxC,KAAKJ,SAAS,CAAC0C,MAAMb,OAAOmC,OAAO5D,KAAKT,MAAM+C,MAAO,CAACE,YAA2C,EAA7BxC,KAAKT,MAAM+C,MAAME,YAAc,EAAG,OAChHxC,KAAKiC,2CAEE,IAAA0C,EAAA3E,KAAA4E,EACoB5E,KAAKT,MAAxB6C,EADDwC,EACCxC,MAAOC,EADRuC,EACQvC,SACf,OAAID,EACKnC,EAAAC,EAAAC,cAAA,qBAAaiC,EAAMyC,SAChBxC,EAIRpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,wBACpBV,SAAUE,KAAK8B,mBAAmB,eAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,EACLC,KAAM,GACNF,IAAmC,SAA9BV,KAAKT,MAAM+C,MAAMQ,WAAqB,IAAM,KACjD7C,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,YACpBV,SAAUE,KAAK8B,mBAAmB,WAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,EACLC,KAAM,EACNF,IAAK,KAELT,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,wBACpBV,SAAUE,KAAK8B,mBAAmB,iBAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,EACLC,KAAM,IACNF,IAAK,MAELT,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,SACpBV,SAAUE,KAAK8B,mBAAmB,QAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,KACLC,KAAM,EACNF,IAAK,OAELT,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,SACpBV,SAAUE,KAAK8B,mBAAmB,QAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,GACLC,KAAM,GACNF,IAAK,KAELT,EAAAC,EAAAC,cAAC2E,EAAD,CAAetE,KAAK,YACpBV,SAAUE,KAAK8B,mBAAmB,WAClCjB,UAAWb,KAAKiC,QAChBtB,IAAK,EACLC,KAAM,GACNF,IAAK,IAGLT,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACD8E,QAAgC,QAAvBhF,KAAKT,MAAM+C,MAAMC,IAC1BzC,SAAUE,KAAKkC,UACf1C,MAAM,SACNyF,MAAM,aAERhF,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACZ8E,QAAuC,SAA9BhF,KAAKT,MAAM+C,MAAMQ,WAC1BhD,SAAUE,KAAKmC,iBACf3C,MAAM,SACNyF,MAAM,cAMZjF,KAAKwD,aAAa0B,IAAI,SAAAC,GAWpB,OAAOlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUG,GAAI4E,EAAQ5E,IAC5CN,EAAAC,EAAAC,cAAA,UAAKgF,EAAQ5E,IACbN,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACAhE,MAAO,IACPiE,OAAQ,KACRpF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,MACAnF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CACArC,KAAM4B,EAAKpF,MAAMwD,KAAKoC,EAAQzB,UAC9BzD,EAAAC,EAAAC,cAACiF,EAAA,EAAD,MACAnF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,WApFCnF,EAAAC,EAAAC,cAAA,gCAxGKe,aCIEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC","file":"static/js/main.c67b2eee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\n\nconst styles = {\n  root: {\n    width: 300,\n    padding:\"10px\",\n    background:\"rgba(200,200,200,0.2)\",\n    margin:\"5px\"\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n};\n\nclass SimpleSlider extends React.Component {\n  state = {\n    value: null,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value })\n    this.props.onChange(event, value)\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {  value } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <Typography id=\"label\">{this.props.name}{value}</Typography>\n        <Slider\n          max={this.props.max}\n          min={this.props.min}\n          step={this.props.step}\n          onDragEnd={this.props.onDragEnd}\n          classes={{ container: classes.slider }}\n          value={value}\n          aria-labelledby=\"label\"\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nSimpleSlider.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleSlider);","import React, { Component } from 'react';\nimport SimpleSlider from './SimpleSlider'\n// import PdfPlot from './PdfPlot';\nimport './App.css';\nimport Switch from '@material-ui/core/Switch';\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalBarSeries} from 'react-vis';\n\n// import {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries} from 'react-vis';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleSliderChange = this.handleSliderChange.bind(this);\n    this.fetcher = this.fetcher.bind(this); \n    this.handleRef = this.handleRef.bind(this);   \n    this.handleFahrenheit = this.handleFahrenheit.bind(this);    \n    this.state = {\n      error: null,\n      isLoaded: false,\n      point:{ref:'R220',\n            ambientTemp: 23.0,\n            current: 6.0,\n            seer: 14.0,\n            year: 2016,\n            tonnage: 3.0,\n            stateDuration: 50000,\n            fahrenheit: \"true\"},\n      value: 50,\n      data: {'lp':[{x:200,y:1},{x:250,y:1},{x:400,y:1}],\n            'vp':[{x:1,y:0},{x:150,y:1},{x:250,y:1}],\n            'lt':[{x:20,y:1},{x:22,y:1},{x:25,y:1}],\n            'vt':[{x:16,y:1},{x:18,y:1},{x:19,y:1}],\n            'sh':[{x:10,y:1},{x:15,y:1},{x:20,y:1}],\n            'sc':[{x:3,y:1},{x:7,y:1},{x:11,y:1}]}\n    };\n    this.plotFeatures = [{title:\"Liquid Line Pressure\", id:\"lpPlot\", handle:'lp'},\n                        {title: \"Vapor Line Pressure\", id:\"vpPlot\", handle:'vp'},\n                        {title: \"Liquid Line Temp\", id:\"ltPlot\", handle:'lt'},\n                        {title: \"Vapor Line Temp\", id:\"vtPlot\", handle:'vt'},\n                        {title: \"SuperHeat\", id: \"shPlot\", handle:'sh'},\n                        {title: \"SubCool\", id:\"scPlot\", handle:'sc'}];\n  }\n  \n  handleSliderChange(name) {\n    return (event, value) => {  \n      this.setState({point:Object.assign(this.state.point, {[name]: value})})\n    };\n  };\n\n  componentDidMount() {\n    var point = this.state.point;\n    fetch(`/score?\n    refrigerant=${point.ref}\n    &ambientTemp=${point.ambientTemp}\n    &current=${point.current}\n    &seer=${point.seer}\n    &year=${point.year}\n    &tonnage=${point.tonnage}\n    &stateDuration=${point.stateDuration}\n    &fahrenheit=${point.fahrenheit}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log('state being updated')\n          this.setState({\n            isLoaded: true,\n            ref: result.ref\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n  fetcher(){\n    const point = this.state.point\n    console.log('fetcher called')\n    console.log(point)\n    fetch(`/score?refrigerant=${point.ref}&ambientTemp=${point.ambientTemp}&current=${point.current}&seer=${point.seer}&year=${point.year}&tonnage=${point.tonnage}&stateDuration=${point.stateDuration}&fahrenheit=${point.fahrenheit}`)\n    .then(res => res.json())\n    .then(\n      (datum) => {\n      console.log(datum)\n      this.setState({data:datum})}\n    )\n  }\n\n  handleRef(){\n    var oldref = this.state.point.ref\n    if (oldref !== 'R22'){ var newref='R22'} else{newref='R410A'}\n    this.setState({point:Object.assign(this.state.point, {ref: newref})})\n    this.fetcher()\n  }\n  handleFahrenheit(){\n    var oldF = this.state.point.fahrenheit\n    if (oldF !== 'true'){ var newF='true'} else{newF='false'}\n    this.setState({point:Object.assign(this.state.point, {fahrenheit: newF})})\n    if (this.state.point.fahrenheit!=='true'){this.setState({point:Object.assign(this.state.point, {ambientTemp: (this.state.point.ambientTemp-32)*5/9})})} \n        else {this.setState({point:Object.assign(this.state.point, {ambientTemp: (this.state.point.ambientTemp*9/5)+32})})} \n    this.fetcher()\n  }\n  render() {\n    const { error, isLoaded} = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className='App'>\n        <h1>Sentree What-If Tool</h1>\n        <div className='toolbar'>\n          <SimpleSlider  name='Ambient Temperature: ' \n          onChange={this.handleSliderChange('ambientTemp')}\n          onDragEnd={this.fetcher}\n          min={0}\n          step={.5}\n          max={this.state.point.fahrenheit==='true'? 120 : 30}/>\n          <SimpleSlider  name='Current: ' \n          onChange={this.handleSliderChange('current')}\n          onDragEnd={this.fetcher}\n          min={0}\n          step={1}\n          max={15}\n          />\n          <SimpleSlider  name='State Duration (ms): ' \n          onChange={this.handleSliderChange('stateDuration')}\n          onDragEnd={this.fetcher}\n          min={0}\n          step={100}\n          max={500000}\n          />    \n          <SimpleSlider  name='Year: ' \n          onChange={this.handleSliderChange('year')}\n          onDragEnd={this.fetcher}\n          min={1999}\n          step={1}\n          max={2019}\n          />    \n          <SimpleSlider  name='Seer: ' \n          onChange={this.handleSliderChange('seer')}\n          onDragEnd={this.fetcher}\n          min={10}\n          step={.5}\n          max={24}\n          />   \n          <SimpleSlider  name='Tonnage: ' \n          onChange={this.handleSliderChange('tonnage')}\n          onDragEnd={this.fetcher}\n          min={0}\n          step={.5}\n          max={5}\n          />    \n                \n          <p>R22?<Switch\n                checked={this.state.point.ref==='R22'}\n                onChange={this.handleRef}\n                value=\"hidden\"\n                color=\"primary\"\n              /></p>\n              <p>Fahrenheit?<Switch\n                checked={this.state.point.fahrenheit==='true'}\n                onChange={this.handleFahrenheit}\n                value=\"hidden\"\n                color=\"primary\"\n              /></p>\n        </div>\n\n\n        {\n          this.plotFeatures.map(element => {\n            // console.log(this.state.data[element.handle])\n            // dat=this.state.data[element.handle].map((pt) => {x:pt[1]})\n            // console.log(dat)\n            // return <PdfPlot \n            //     title={element.title} \n            //     id={element.id}\n            //     height=\"300\" width=\"200\"\n            //     x={this.state.data[element.handle].map(x=>x[0])}\n            //     y={this.state.data[element.handle].map(x=>x[1])}\n            //   />\n            return <div className=\"pdfPlot\" id={element.id}>\n            <h5>{element.id}</h5>\n            <XYPlot\n            width={700}\n            height={300}>\n            <HorizontalGridLines />\n            <VerticalBarSeries\n            data={this.state.data[element.handle]}/>\n            <XAxis />\n            <YAxis />\n          </XYPlot>\n          </div>\n          })\n        }\n      </div>\n      \n      );\n    }\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}